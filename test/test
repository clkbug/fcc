#!/bin/bash

# set -x

assert() {
  expected="$1"
  input="$2"

  ./fcc "$input" > /tmp/tmp.s
  riscv32-unknown-elf-gcc -o /tmp/tmp -g /tmp/tmp.s
  qemu-riscv32 /tmp/tmp
  actual="$?"

  if [ "$actual" = "$expected" ]; then
    echo "$input => $actual"
  else
    echo "$input => $expected expected, but got $actual"
    exit 1
  fi
}



assert 0 0
assert 100 100
assert 1 "0 + 1"
assert 5 "2 + 3"
assert 1 "3 - 2"
assert 10 "1 +2+3 - 4   + 5 + 6 - 7 + 8 -9 + 15 - 10"
assert 7 "1 + 2*3"
assert 62 "4 * 5 + 6 * 7"
assert 53 "(1 + 2) * 3 + 4 * (5 + 6)"
assert 0 "0 == 1"
assert 1 "10 == 10"
assert 1 "0 != 1"
assert 0 "10 != 10"
assert 1 "1 + 2 == 3"
assert 1 "1 + 2 + 3 == 2 * 3"
assert 1 "1 < 2"
assert 0 "1 < 1"
assert 0 "1 < 0"
assert 1 "1 + 2 <= 3"
assert 0 "1 + 2 < 3"
assert 0 "5 > 6"
assert 0 "2 + 3 > 2 * 3"
assert 1 "7 <= 8"
assert 1 "8 <= 8"
assert 0 "9 <= 8"
assert 1 "8 >= 7"
assert 1 "2 * 4 >= 3 + 4"
assert 0 "a"
assert 0 "b"
assert 0 "a + b"
assert 1 "a = 1"
assert 6 "a = 1 * 2 + 3 - 4 + 5"
assert 3 "1 + (a = 2)"
assert 3 "(a=1) + 2"
assert 2 "(a=1) + a" # 評価順依存？
assert 3 "a = b = 1 + 2"
assert 2 "a = (b = 1) + 1"
assert 27 "(a = 1) + (b = 2) + (a + 3) * (b + 4)"
assert 0 "abc = 0"
assert 1 "abc = 1"
assert 3 "1 + (abc = 2)"
assert 5 "1 + (abc = 2) + abc"
assert 7 "(first = 1 + 2) + (second = 3 + 4) - first"
assert 3 "(first = 1 + 2) + (second = 3 + 4) - second"
assert 42 "(first = 1 + 2) + (second = 3 + 4) + (third = 5 + 6) + first + second + third"


echo OK